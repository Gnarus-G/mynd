name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    permissions:
      contents: write
    name: Release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@master

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: x86_64-apple-darwin
          toolchain: stable

      - name: Tauri dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: >-
          sudo apt-get update &&
          sudo apt-get install -y
          libgtk-3-dev
          libayatana-appindicator3-dev
          libwebkit2gtk-4.1-dev
          webkit2gtk-driver
          xvfb

      - uses: oven-sh/setup-bun@v1
      - name: Install JS packages
        run: bun install
      - name: Tauri Build
        run: bun tauri build --verbose

      - name: Build Artifacts
        id: dist
        run: |
          set -x

          WORKDIR="src-tauri"
          OUTPUT_DIR="$WORKDIR/built/output"
          mkdir -p "$OUTPUT_DIR"
          echo "BUILT_ARCHIVES=$OUTPUT_DIR" >> $GITHUB_OUTPUT

          set -xe;

          cargo build --manifest-path=$WORKDIR/Cargo.toml --release -p todo;

          BINARIES=(mynd todo) 

          for BIN in $BINARIES; do

            ARCHIVE=$BIN\_${TARGET}.tar.gz
            BIN_PATH=$WORKDIR/target/release/$BIN

            strip $BIN_PATH;
            
            ARTIFACTS_FOLDER="${GITHUB_REPOSITORY#*/}_${GITHUB_REF_NAME}"
            mkdir $ARTIFACTS_FOLDER
            cp -r $BIN_PATH README.md LICENSE $ARTIFACTS_FOLDER
            tar -caf $ARCHIVE $ARTIFACTS_FOLDER/*

            mv $ARCHIVE $OUTPUT_DIR
          done
        env:
          TARGET: ${{ matrix.target }}

      - name: Name Release
        run: echo "RELEASE_NAME=${GITHUB_REPOSITORY#*/} ${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          name: ${{ env.RELEASE_NAME }}
          files: |
            ${{ steps.dist.outputs.BUILT_ARCHIVES }}/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
